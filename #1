class Stack:
    def __init__(self, size=10):
        self.size = size
        self.stack = [None] * size
        self.top_index = -1

    def push(self, value):
        if self.top_index == self.size - 1:
            print("Ошибка: Стек переполнен! Невозможно добавить элемент.")
            return

        self.top_index += 1
        self.stack[self.top_index] = value

    def pop(self):
        if self.is_empty():
            print("Ошибка: Стек пуст! Невозможно удалить элемент.")
            return None

        value = self.stack[self.top_index]
        self.stack[self.top_index] = None
        self.top_index -= 1
        return value

    def top(self):
        if self.is_empty():
            print("Ошибка: Стек пуст!")
            return None

        return self.stack[self.top_index]

    def is_empty(self):
        return self.top_index == -1

stack = Stack(size=10)

stack.push(1)
stack.push(2)
stack.push(3)
print("Текущий топ:", stack.top())

print("Удален элемент:", stack.pop())

print("Текущий топ:", stack.top())

print("Стек пуст?", stack.is_empty())

stack.pop()
stack.pop()
print("Стек пуст?", stack.is_empty())

stack.pop()

for i in range(11):
    stack.push(i)
